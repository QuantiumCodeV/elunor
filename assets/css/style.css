/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-green-light: #1DB8A7;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-7 {
    top: calc(var(--spacing) * 7);
  }
  .top-\[-30px\] {
    top: -30px;
  }
  .top-\[12px\] {
    top: 12px;
  }
  .top-\[16px\] {
    top: 16px;
  }
  .top-\[36px\] {
    top: 36px;
  }
  .top-\[38px\] {
    top: 38px;
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-\[80px\] {
    top: 80px;
  }
  .top-\[135px\] {
    top: 135px;
  }
  .top-\[170px\] {
    top: 170px;
  }
  .right-7 {
    right: calc(var(--spacing) * 7);
  }
  .right-\[-100\%\] {
    right: -100%;
  }
  .right-\[10px\] {
    right: 10px;
  }
  .bottom-\[-60px\] {
    bottom: -60px;
  }
  .bottom-\[-108px\] {
    bottom: -108px;
  }
  .bottom-\[-119px\] {
    bottom: -119px;
  }
  .bottom-\[-265px\] {
    bottom: -265px;
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .-z-20 {
    z-index: calc(20 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-50 {
    z-index: 50;
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-18 {
    margin-top: calc(var(--spacing) * 18);
  }
  .mt-\[40px\] {
    margin-top: 40px;
  }
  .mt-\[72px\] {
    margin-top: 72px;
  }
  .mb-\[113px\] {
    margin-bottom: 113px;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-\[218px\] {
    height: 218px;
  }
  .h-\[600px\] {
    height: 600px;
  }
  .h-full {
    height: 100%;
  }
  .min-h-\[600px\] {
    min-height: 600px;
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[417px\] {
    width: 417px;
  }
  .w-\[438px\] {
    width: 438px;
  }
  .w-\[650px\] {
    width: 650px;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .max-w-\[379px\] {
    max-width: 379px;
  }
  .max-w-\[400px\] {
    max-width: 400px;
  }
  .max-w-\[417px\] {
    max-width: 417px;
  }
  .max-w-\[468px\] {
    max-width: 468px;
  }
  .max-w-\[472px\] {
    max-width: 472px;
  }
  .max-w-\[483px\] {
    max-width: 483px;
  }
  .max-w-\[507px\] {
    max-width: 507px;
  }
  .max-w-\[630px\] {
    max-width: 630px;
  }
  .max-w-\[668px\] {
    max-width: 668px;
  }
  .max-w-\[720px\] {
    max-width: 720px;
  }
  .max-w-\[822px\] {
    max-width: 822px;
  }
  .max-w-\[956px\] {
    max-width: 956px;
  }
  .max-w-\[1440px\] {
    max-width: 1440px;
  }
  .min-w-\[650px\] {
    min-width: 650px;
  }
  .min-w-\[726px\] {
    min-width: 726px;
  }
  .min-w-\[1720px\] {
    min-width: 1720px;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-4\.5 {
    gap: calc(var(--spacing) * 4.5);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-5\.25 {
    gap: calc(var(--spacing) * 5.25);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-1\.5 {
    column-gap: calc(var(--spacing) * 1.5);
  }
  .gap-x-\[133px\] {
    column-gap: 133px;
  }
  .gap-y-3 {
    row-gap: calc(var(--spacing) * 3);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[4px\] {
    border-radius: 4px;
  }
  .rounded-\[6px\] {
    border-radius: 6px;
  }
  .rounded-\[10px\] {
    border-radius: 10px;
  }
  .rounded-\[12px\] {
    border-radius: 12px;
  }
  .rounded-\[100px\] {
    border-radius: 100px;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-b-\[32px\] {
    border-bottom-right-radius: 32px;
    border-bottom-left-radius: 32px;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white\/2 {
    border-color: color-mix(in srgb, #fff 2%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 2%, transparent);
    }
  }
  .border-white\/4 {
    border-color: color-mix(in srgb, #fff 4%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 4%, transparent);
    }
  }
  .border-white\/6 {
    border-color: color-mix(in srgb, #fff 6%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 6%, transparent);
    }
  }
  .border-white\/24 {
    border-color: color-mix(in srgb, #fff 24%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 24%, transparent);
    }
  }
  .border-white\/30 {
    border-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .border-white\/40 {
    border-color: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .border-white\/48 {
    border-color: color-mix(in srgb, #fff 48%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 48%, transparent);
    }
  }
  .bg-\[\#1DB8A7\] {
    background-color: #1DB8A7;
  }
  .bg-\[\#020202\] {
    background-color: #020202;
  }
  .bg-\[\#040404\] {
    background-color: #040404;
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-green-light {
    background-color: var(--color-green-light);
  }
  .bg-green-light\/12 {
    background-color: color-mix(in srgb, #1DB8A7 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-light) 12%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/4 {
    background-color: color-mix(in srgb, #fff 4%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 4%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-none {
    background-image: none;
  }
  .from-\[\#1DB8A7\] {
    --tw-gradient-from: #1DB8A7;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#1E79F9\] {
    --tw-gradient-from: #1E79F9;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#1519DE\] {
    --tw-gradient-to: #1519DE;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#027468\] {
    --tw-gradient-to: #027468;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-5\.5 {
    padding: calc(var(--spacing) * 5.5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-\[25px\] {
    padding: 25px;
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-4\.5 {
    padding-inline: calc(var(--spacing) * 4.5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-6\.5 {
    padding-inline: calc(var(--spacing) * 6.5);
  }
  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-3\.75 {
    padding-block: calc(var(--spacing) * 3.75);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-\[56px\] {
    padding-block: 56px;
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-\[333px\] {
    padding-top: 333px;
  }
  .pb-9 {
    padding-bottom: calc(var(--spacing) * 9);
  }
  .pl-9 {
    padding-left: calc(var(--spacing) * 9);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[40px\] {
    font-size: 40px;
  }
  .text-\[42px\] {
    font-size: 42px;
  }
  .text-\[56px\] {
    font-size: 56px;
  }
  .leading-\[12\%\] {
    --tw-leading: 12%;
    line-height: 12%;
  }
  .leading-\[100\%\] {
    --tw-leading: 100%;
    line-height: 100%;
  }
  .leading-\[110\%\] {
    --tw-leading: 110%;
    line-height: 110%;
  }
  .leading-\[125\%\] {
    --tw-leading: 125%;
    line-height: 125%;
  }
  .leading-\[130\%\] {
    --tw-leading: 130%;
    line-height: 130%;
  }
  .leading-\[150\%\] {
    --tw-leading: 150%;
    line-height: 150%;
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-\[-0\.02em\] {
    --tw-tracking: -0.02em;
    letter-spacing: -0.02em;
  }
  .tracking-\[-0\.04em\] {
    --tw-tracking: -0.04em;
    letter-spacing: -0.04em;
  }
  .text-\[\#4B4B4B\] {
    color: #4B4B4B;
  }
  .text-\[\#A6A6A6\] {
    color: #A6A6A6;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-green-light {
    color: var(--color-green-light);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/25 {
    color: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .text-white\/30 {
    color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .text-white\/32 {
    color: color-mix(in srgb, #fff 32%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 32%, transparent);
    }
  }
  .text-white\/50 {
    color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .group-hover\:fill-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-white);
      }
    }
  }
  .group-hover\:fill-white\/50 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          fill: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .group-hover\:fill-white\/70 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          fill: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[\#1DB8A7\] {
    &:hover {
      @media (hover: hover) {
        background-color: #1DB8A7;
      }
    }
  }
  .hover\:bg-\[\#1db8a7e0\] {
    &:hover {
      @media (hover: hover) {
        background-color: #1db8a7e0;
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:p-0 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .lg\:text-\[56px\] {
    @media (width >= 64rem) {
      font-size: 56px;
    }
  }
}
* {
  box-sizing: border-box;
  font-family: "Roboto Flex", sans-serif;
}
::selection {
  background-color: #1DB8A7;
}
::-webkit-scrollbar {
  width: 10px;
}
::-webkit-scrollbar-thumb {
  background-color: #1DB8A7;
}
.backdrop {
  top: 0;
  left: 0;
  z-index: 1;
  background-color: #0a0a0a71;
  position: fixed;
  width: 100vw;
  height: 100vh;
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}
.backdrop.active {
  opacity: 1;
}
#mobileMenuContent.active {
  right: 0;
}
.active>div>svg>path {
  stroke-opacity: 1;
}
.loader {
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  background-color: #000000;
  position: fixed;
  display: flex;
  transition: opacity 0.5s ease-in-out;
  justify-content: center;
  align-items: center;
  z-index: 99999;
}
.loader_image {
  width: 50px;
  height: 50px;
  animation: uniqueLoader 3s infinite ease-in-out;
  filter: drop-shadow(0 0 8px #1DB8A7);
  transition: transform 0.8s ease-in-out;
  transform-origin: center;
}

@keyframes uniqueLoader {
  0% {
    transform: scale(1) rotate(0deg);
    filter: drop-shadow(0 0 5px #1DB8A7) brightness(1);
  }
  25% {
    transform: scale(1.2) rotate(90deg);
    filter: drop-shadow(0 0 15px #1DB8A7) brightness(1.4);
  }
  50% {
    transform: scale(0.8) rotate(180deg);
    filter: drop-shadow(0 0 20px #1db8a6a1) brightness(0.8);
  }
  75% {
    transform: scale(1.2) rotate(270deg);
    filter: drop-shadow(0 0 15px #1DB8A7) brightness(1.4);
  }
  100% {
    transform: scale(1) rotate(360deg);
    filter: drop-shadow(0 0 5px #1DB8A7) brightness(1);
  }
}
.loader.fade-out {
  opacity: 0;
  pointer-events: none;
}
.cursor-animation {
  animation: cursorAnimation 3s ease-in-out infinite;
}
@keyframes cursorAnimation {
  0% {
    transform: translate(0, 0);
    opacity: 1;
  }
  25% {
    transform: translate(0, 0);
    opacity: 1;
  }
  50% {
    transform: translate(20px, 20px);
    opacity: 0;
  }
  75% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(0, 0);
    opacity: 1;
  }
}
.customBorder {
  position: relative;
  box-sizing: border-box;
}
.customBorder::before {
  position: absolute;
  border-radius: 12px;
  content: "";
  z-index: -1;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%);
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
